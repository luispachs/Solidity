{
	"id": "db99d3c35603304ad87e5a8d510e6509",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"BLOQUE 1 - Conceptos básicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol": {
				"content": "// SPDX-License-Identifier: MIT\n//Especificar la version\npragma solidity >=0.8.2 <0.9.0;\n\ncontract bucle_for{\n    \n    //Suma de los 100 primeros numeros a partir del numero introducido\n    \n    function suma(uint _numero) public pure returns(uint){\n        \n        uint Suma = 0;\n        \n        for(uint i =_numero; i<(100+_numero); i++){\n            Suma = Suma +i;\n        }\n        \n        return Suma;\n    }\n    \n    //Esto es un array dinamico de direcciones\n    address [] direcciones;\n    \n    //Añade una direccion al array\n    function asociar() public{\n        direcciones.push(msg.sender);\n    }\n    \n    //Comprobar si la direccion esta en el array de direcciones\n    function comprobarAsociacion() public view returns(bool, address){\n        \n        for(uint i=0; i< direcciones.length; i++){\n            if(msg.sender==direcciones[i]){\n                return (true, direcciones[i]);\n            }\n        }\n    }\n    \n    //Doble for: Suma los 10 primeros factoriales\n    //n! = n*(n-1)*(n-2)*...*2*1\n    \n    function sumaFactorial() public pure returns(uint){\n        \n        uint suma=0;\n        for(uint i =1; i<=10; i++){\n            \n            uint factorial = 1;\n            \n            for(uint j=2; j<=i; j++){\n                factorial = factorial*j;\n            }\n            \n            suma = suma + factorial;\n        }\n        return suma;\n    }\n}\n\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"BLOQUE 1 - Conceptos básicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol": {
				"bucle_for": {
					"abi": [
						{
							"inputs": [],
							"name": "asociar",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "comprobarAsociacion",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_numero",
									"type": "uint256"
								}
							],
							"name": "suma",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sumaFactorial",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":90:1388  contract bucle_for{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":90:1388  contract bucle_for{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x41806a13\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x96f6611d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa98ce68b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xddef5a4a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":686:933  function comprobarAsociacion() public view returns(bool, address){... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1031:1386  function sumaFactorial() public pure returns(uint){... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":542:612  function asociar() public{... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":195:416  function suma(uint _numero) public pure returns(uint){... */\n    tag_6:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":686:933  function comprobarAsociacion() public view returns(bool, address){... */\n    tag_8:\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":737:741  bool */\n      0x00\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":743:750  address */\n      dup1\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":774:780  uint i */\n      0x00\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":770:927  for(uint i=0; i< direcciones.length; i++){... */\n    tag_23:\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":787:798  direcciones */\n      0x00\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":787:805  direcciones.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":784:785  i */\n      dup2\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":784:805  i< direcciones.length */\n      lt\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":770:927  for(uint i=0; i< direcciones.length; i++){... */\n      iszero\n      tag_24\n      jumpi\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":840:851  direcciones */\n      0x00\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":852:853  i */\n      dup2\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":840:854  direcciones[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_26\n      jumpi\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n    tag_26:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":828:854  msg.sender==direcciones[i] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":828:838  msg.sender */\n      caller\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":828:854  msg.sender==direcciones[i] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":825:917  if(msg.sender==direcciones[i]){... */\n      tag_30\n      jumpi\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":881:885  true */\n      0x01\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":887:898  direcciones */\n      0x00\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":899:900  i */\n      dup3\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":887:901  direcciones[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_31\n      jumpi\n      tag_32\n      tag_28\n      jump\t// in\n    tag_32:\n    tag_31:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":873:902  return (true, direcciones[i]) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_22)\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":825:917  if(msg.sender==direcciones[i]){... */\n    tag_30:\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":807:810  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":770:927  for(uint i=0; i< direcciones.length; i++){... */\n      jump(tag_23)\n    tag_24:\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":686:933  function comprobarAsociacion() public view returns(bool, address){... */\n    tag_22:\n      swap1\n      swap2\n      jump\t// out\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1031:1386  function sumaFactorial() public pure returns(uint){... */\n    tag_12:\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1076:1080  uint */\n      0x00\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1100:1109  uint suma */\n      dup1\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1110:1111  0 */\n      0x00\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1100:1111  uint suma=0 */\n      swap1\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1125:1131  uint i */\n      0x00\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1133:1134  1 */\n      0x01\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1125:1134  uint i =1 */\n      swap1\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1121:1359  for(uint i =1; i<=10; i++){... */\n    tag_35:\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1139:1141  10 */\n      0x0a\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1136:1137  i */\n      dup2\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1136:1141  i<=10 */\n      gt\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1121:1359  for(uint i =1; i<=10; i++){... */\n      tag_36\n      jumpi\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1174:1188  uint factorial */\n      0x00\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1191:1192  1 */\n      0x01\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1174:1192  uint factorial = 1 */\n      swap1\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1223:1229  uint j */\n      0x00\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1230:1231  2 */\n      0x02\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1223:1231  uint j=2 */\n      swap1\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1219:1299  for(uint j=2; j<=i; j++){... */\n    tag_38:\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1236:1237  i */\n      dup3\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1233:1234  j */\n      dup2\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1233:1237  j<=i */\n      gt\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1219:1299  for(uint j=2; j<=i; j++){... */\n      tag_39\n      jumpi\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1283:1284  j */\n      dup1\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1273:1282  factorial */\n      dup3\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1273:1284  factorial*j */\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1261:1284  factorial = factorial*j */\n      swap2\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1239:1242  j++ */\n      dup1\n      dup1\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      swap2\n      pop\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1219:1299  for(uint j=2; j<=i; j++){... */\n      jump(tag_38)\n    tag_39:\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1339:1348  factorial */\n      dup1\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1332:1336  suma */\n      dup4\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1332:1348  suma + factorial */\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1325:1348  suma = suma + factorial */\n      swap3\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1147:1359  {... */\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1143:1146  i++ */\n      dup1\n      dup1\n      tag_47\n      swap1\n      tag_44\n      jump\t// in\n    tag_47:\n      swap2\n      pop\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1121:1359  for(uint i =1; i<=10; i++){... */\n      jump(tag_35)\n    tag_36:\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1375:1379  suma */\n      dup1\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1368:1379  return suma */\n      swap2\n      pop\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":1031:1386  function sumaFactorial() public pure returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":542:612  function asociar() public{... */\n    tag_16:\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":577:588  direcciones */\n      0x00\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":594:604  msg.sender */\n      caller\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":577:605  direcciones.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":542:612  function asociar() public{... */\n      jump\t// out\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":195:416  function suma(uint _numero) public pure returns(uint){... */\n    tag_20:\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":243:247  uint */\n      0x00\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":267:276  uint Suma */\n      dup1\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":279:280  0 */\n      0x00\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":267:280  uint Suma = 0 */\n      swap1\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":303:309  uint i */\n      0x00\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":311:318  _numero */\n      dup4\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":303:318  uint i =_numero */\n      swap1\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":299:380  for(uint i =_numero; i<(100+_numero); i++){... */\n    tag_51:\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":327:334  _numero */\n      dup4\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":323:326  100 */\n      0x64\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":323:334  100+_numero */\n      tag_54\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_54:\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":320:321  i */\n      dup2\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":320:335  i<(100+_numero) */\n      lt\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":299:380  for(uint i =_numero; i<(100+_numero); i++){... */\n      iszero\n      tag_52\n      jumpi\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":368:369  i */\n      dup1\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":362:366  Suma */\n      dup3\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":362:369  Suma +i */\n      tag_55\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_55:\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":355:369  Suma = Suma +i */\n      swap2\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":337:340  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":299:380  for(uint i =_numero; i<(100+_numero); i++){... */\n      jump(tag_51)\n    tag_52:\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":405:409  Suma */\n      dup1\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":398:409  return Suma */\n      swap2\n      pop\n      pop\n        /* \"BLOQUE 1 - Conceptos b\\xc3\\xa1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":195:416  function suma(uint _numero) public pure returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_56:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_57:\n        /* \"#utility.yul\":184:205   */\n      tag_72\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_56\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:344   */\n    tag_58:\n        /* \"#utility.yul\":255:262   */\n      0x00\n        /* \"#utility.yul\":295:337   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":288:293   */\n      dup3\n        /* \"#utility.yul\":284:338   */\n      and\n        /* \"#utility.yul\":273:338   */\n      swap1\n      pop\n        /* \"#utility.yul\":218:344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":350:446   */\n    tag_59:\n        /* \"#utility.yul\":387:394   */\n      0x00\n        /* \"#utility.yul\":416:440   */\n      tag_75\n        /* \"#utility.yul\":434:439   */\n      dup3\n        /* \"#utility.yul\":416:440   */\n      tag_58\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":405:440   */\n      swap1\n      pop\n        /* \"#utility.yul\":350:446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":452:570   */\n    tag_60:\n        /* \"#utility.yul\":539:563   */\n      tag_77\n        /* \"#utility.yul\":557:562   */\n      dup2\n        /* \"#utility.yul\":539:563   */\n      tag_59\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":534:537   */\n      dup3\n        /* \"#utility.yul\":527:564   */\n      mstore\n        /* \"#utility.yul\":452:570   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":576:896   */\n    tag_10:\n        /* \"#utility.yul\":691:695   */\n      0x00\n        /* \"#utility.yul\":729:731   */\n      0x40\n        /* \"#utility.yul\":718:727   */\n      dup3\n        /* \"#utility.yul\":714:732   */\n      add\n        /* \"#utility.yul\":706:732   */\n      swap1\n      pop\n        /* \"#utility.yul\":742:807   */\n      tag_79\n        /* \"#utility.yul\":804:805   */\n      0x00\n        /* \"#utility.yul\":793:802   */\n      dup4\n        /* \"#utility.yul\":789:806   */\n      add\n        /* \"#utility.yul\":780:786   */\n      dup6\n        /* \"#utility.yul\":742:807   */\n      tag_57\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":817:889   */\n      tag_80\n        /* \"#utility.yul\":885:887   */\n      0x20\n        /* \"#utility.yul\":874:883   */\n      dup4\n        /* \"#utility.yul\":870:888   */\n      add\n        /* \"#utility.yul\":861:867   */\n      dup5\n        /* \"#utility.yul\":817:889   */\n      tag_60\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":576:896   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":902:979   */\n    tag_61:\n        /* \"#utility.yul\":939:946   */\n      0x00\n        /* \"#utility.yul\":968:973   */\n      dup2\n        /* \"#utility.yul\":957:973   */\n      swap1\n      pop\n        /* \"#utility.yul\":902:979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":985:1103   */\n    tag_62:\n        /* \"#utility.yul\":1072:1096   */\n      tag_83\n        /* \"#utility.yul\":1090:1095   */\n      dup2\n        /* \"#utility.yul\":1072:1096   */\n      tag_61\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1067:1070   */\n      dup3\n        /* \"#utility.yul\":1060:1097   */\n      mstore\n        /* \"#utility.yul\":985:1103   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1331   */\n    tag_14:\n        /* \"#utility.yul\":1202:1206   */\n      0x00\n        /* \"#utility.yul\":1240:1242   */\n      0x20\n        /* \"#utility.yul\":1229:1238   */\n      dup3\n        /* \"#utility.yul\":1225:1243   */\n      add\n        /* \"#utility.yul\":1217:1243   */\n      swap1\n      pop\n        /* \"#utility.yul\":1253:1324   */\n      tag_85\n        /* \"#utility.yul\":1321:1322   */\n      0x00\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1306:1323   */\n      add\n        /* \"#utility.yul\":1297:1303   */\n      dup5\n        /* \"#utility.yul\":1253:1324   */\n      tag_62\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1109:1331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1418:1535   */\n    tag_64:\n        /* \"#utility.yul\":1527:1528   */\n      0x00\n        /* \"#utility.yul\":1524:1525   */\n      dup1\n        /* \"#utility.yul\":1517:1529   */\n      revert\n        /* \"#utility.yul\":1664:1786   */\n    tag_66:\n        /* \"#utility.yul\":1737:1761   */\n      tag_90\n        /* \"#utility.yul\":1755:1760   */\n      dup2\n        /* \"#utility.yul\":1737:1761   */\n      tag_61\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1730:1735   */\n      dup2\n        /* \"#utility.yul\":1727:1762   */\n      eq\n        /* \"#utility.yul\":1717:1780   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":1776:1777   */\n      0x00\n        /* \"#utility.yul\":1773:1774   */\n      dup1\n        /* \"#utility.yul\":1766:1778   */\n      revert\n        /* \"#utility.yul\":1717:1780   */\n    tag_91:\n        /* \"#utility.yul\":1664:1786   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1792:1931   */\n    tag_67:\n        /* \"#utility.yul\":1838:1843   */\n      0x00\n        /* \"#utility.yul\":1876:1882   */\n      dup2\n        /* \"#utility.yul\":1863:1883   */\n      calldataload\n        /* \"#utility.yul\":1854:1883   */\n      swap1\n      pop\n        /* \"#utility.yul\":1892:1925   */\n      tag_93\n        /* \"#utility.yul\":1919:1924   */\n      dup2\n        /* \"#utility.yul\":1892:1925   */\n      tag_66\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1792:1931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1937:2266   */\n    tag_19:\n        /* \"#utility.yul\":1996:2002   */\n      0x00\n        /* \"#utility.yul\":2045:2047   */\n      0x20\n        /* \"#utility.yul\":2033:2042   */\n      dup3\n        /* \"#utility.yul\":2024:2031   */\n      dup5\n        /* \"#utility.yul\":2020:2043   */\n      sub\n        /* \"#utility.yul\":2016:2048   */\n      slt\n        /* \"#utility.yul\":2013:2132   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":2051:2130   */\n      tag_96\n      tag_64\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2013:2132   */\n    tag_95:\n        /* \"#utility.yul\":2171:2172   */\n      0x00\n        /* \"#utility.yul\":2196:2249   */\n      tag_97\n        /* \"#utility.yul\":2241:2248   */\n      dup5\n        /* \"#utility.yul\":2232:2238   */\n      dup3\n        /* \"#utility.yul\":2221:2230   */\n      dup6\n        /* \"#utility.yul\":2217:2239   */\n      add\n        /* \"#utility.yul\":2196:2249   */\n      tag_67\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2186:2249   */\n      swap2\n      pop\n        /* \"#utility.yul\":2142:2259   */\n      pop\n        /* \"#utility.yul\":1937:2266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2272:2452   */\n    tag_28:\n        /* \"#utility.yul\":2320:2397   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2317:2318   */\n      0x00\n        /* \"#utility.yul\":2310:2398   */\n      mstore\n        /* \"#utility.yul\":2417:2421   */\n      0x32\n        /* \"#utility.yul\":2414:2415   */\n      0x04\n        /* \"#utility.yul\":2407:2422   */\n      mstore\n        /* \"#utility.yul\":2441:2445   */\n      0x24\n        /* \"#utility.yul\":2438:2439   */\n      0x00\n        /* \"#utility.yul\":2431:2446   */\n      revert\n        /* \"#utility.yul\":2458:2638   */\n    tag_68:\n        /* \"#utility.yul\":2506:2583   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2503:2504   */\n      0x00\n        /* \"#utility.yul\":2496:2584   */\n      mstore\n        /* \"#utility.yul\":2603:2607   */\n      0x11\n        /* \"#utility.yul\":2600:2601   */\n      0x04\n        /* \"#utility.yul\":2593:2608   */\n      mstore\n        /* \"#utility.yul\":2627:2631   */\n      0x24\n        /* \"#utility.yul\":2624:2625   */\n      0x00\n        /* \"#utility.yul\":2617:2632   */\n      revert\n        /* \"#utility.yul\":2644:3054   */\n    tag_42:\n        /* \"#utility.yul\":2684:2691   */\n      0x00\n        /* \"#utility.yul\":2707:2727   */\n      tag_101\n        /* \"#utility.yul\":2725:2726   */\n      dup3\n        /* \"#utility.yul\":2707:2727   */\n      tag_61\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2702:2727   */\n      swap2\n      pop\n        /* \"#utility.yul\":2741:2761   */\n      tag_102\n        /* \"#utility.yul\":2759:2760   */\n      dup4\n        /* \"#utility.yul\":2741:2761   */\n      tag_61\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2736:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2796:2797   */\n      dup3\n        /* \"#utility.yul\":2793:2794   */\n      dup3\n        /* \"#utility.yul\":2789:2798   */\n      mul\n        /* \"#utility.yul\":2818:2848   */\n      tag_103\n        /* \"#utility.yul\":2836:2847   */\n      dup2\n        /* \"#utility.yul\":2818:2848   */\n      tag_61\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2807:2848   */\n      swap2\n      pop\n        /* \"#utility.yul\":2997:2998   */\n      dup3\n        /* \"#utility.yul\":2988:2995   */\n      dup3\n        /* \"#utility.yul\":2984:2999   */\n      div\n        /* \"#utility.yul\":2981:2982   */\n      dup5\n        /* \"#utility.yul\":2978:3000   */\n      eq\n        /* \"#utility.yul\":2958:2959   */\n      dup4\n        /* \"#utility.yul\":2951:2960   */\n      iszero\n        /* \"#utility.yul\":2931:3014   */\n      or\n        /* \"#utility.yul\":2908:3047   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":3027:3045   */\n      tag_105\n      tag_68\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2908:3047   */\n    tag_104:\n        /* \"#utility.yul\":2692:3054   */\n      pop\n        /* \"#utility.yul\":2644:3054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3060:3293   */\n    tag_44:\n        /* \"#utility.yul\":3099:3102   */\n      0x00\n        /* \"#utility.yul\":3122:3146   */\n      tag_107\n        /* \"#utility.yul\":3140:3145   */\n      dup3\n        /* \"#utility.yul\":3122:3146   */\n      tag_61\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3113:3146   */\n      swap2\n      pop\n        /* \"#utility.yul\":3168:3234   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3161:3166   */\n      dup3\n        /* \"#utility.yul\":3158:3235   */\n      sub\n        /* \"#utility.yul\":3155:3258   */\n      tag_108\n      jumpi\n        /* \"#utility.yul\":3238:3256   */\n      tag_109\n      tag_68\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3155:3258   */\n    tag_108:\n        /* \"#utility.yul\":3285:3286   */\n      0x01\n        /* \"#utility.yul\":3278:3283   */\n      dup3\n        /* \"#utility.yul\":3274:3287   */\n      add\n        /* \"#utility.yul\":3267:3287   */\n      swap1\n      pop\n        /* \"#utility.yul\":3060:3293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3299:3490   */\n    tag_46:\n        /* \"#utility.yul\":3339:3342   */\n      0x00\n        /* \"#utility.yul\":3358:3378   */\n      tag_111\n        /* \"#utility.yul\":3376:3377   */\n      dup3\n        /* \"#utility.yul\":3358:3378   */\n      tag_61\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3353:3378   */\n      swap2\n      pop\n        /* \"#utility.yul\":3392:3412   */\n      tag_112\n        /* \"#utility.yul\":3410:3411   */\n      dup4\n        /* \"#utility.yul\":3392:3412   */\n      tag_61\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3387:3412   */\n      swap3\n      pop\n        /* \"#utility.yul\":3435:3436   */\n      dup3\n        /* \"#utility.yul\":3432:3433   */\n      dup3\n        /* \"#utility.yul\":3428:3437   */\n      add\n        /* \"#utility.yul\":3421:3437   */\n      swap1\n      pop\n        /* \"#utility.yul\":3456:3459   */\n      dup1\n        /* \"#utility.yul\":3453:3454   */\n      dup3\n        /* \"#utility.yul\":3450:3460   */\n      gt\n        /* \"#utility.yul\":3447:3483   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":3463:3481   */\n      tag_114\n      tag_68\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3447:3483   */\n    tag_113:\n        /* \"#utility.yul\":3299:3490   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207f4e9b6c39dbe21feb0069b3cf1a51aa15ef0aa035139a22038fa9eabe4b736664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506105068061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c806341806a131461004e57806396f6611d1461006d578063a98ce68b1461008b578063ddef5a4a14610095575b5f80fd5b6100566100c5565b60405161006492919061030a565b60405180910390f35b61007561019c565b6040516100829190610349565b60405180910390f35b61009361020d565b005b6100af60048036038101906100aa9190610390565b61026e565b6040516100bc9190610349565b60405180910390f35b5f805f5b5f80549050811015610196575f81815481106100e8576100e76103bb565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036101895760015f8281548110610157576101566103bb565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250925050610198565b80806001019150506100c9565b505b9091565b5f805f90505f600190505b600a8111610205575f600190505f600290505b8281116101e25780826101cd9190610415565b915080806101da90610456565b9150506101ba565b5080836101ef919061049d565b92505080806101fd90610456565b9150506101a7565b508091505090565b5f33908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f90505f8390505b836064610285919061049d565b8110156102a7578082610298919061049d565b91508080600101915050610278565b5080915050919050565b5f8115159050919050565b6102c5816102b1565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102f4826102cb565b9050919050565b610304816102ea565b82525050565b5f60408201905061031d5f8301856102bc565b61032a60208301846102fb565b9392505050565b5f819050919050565b61034381610331565b82525050565b5f60208201905061035c5f83018461033a565b92915050565b5f80fd5b61036f81610331565b8114610379575f80fd5b50565b5f8135905061038a81610366565b92915050565b5f602082840312156103a5576103a4610362565b5b5f6103b28482850161037c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61041f82610331565b915061042a83610331565b925082820261043881610331565b9150828204841483151761044f5761044e6103e8565b5b5092915050565b5f61046082610331565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610492576104916103e8565b5b600182019050919050565b5f6104a782610331565b91506104b283610331565b92508282019050808211156104ca576104c96103e8565b5b9291505056fea26469706673582212207f4e9b6c39dbe21feb0069b3cf1a51aa15ef0aa035139a22038fa9eabe4b736664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x506 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41806A13 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x96F6611D EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xA98CE68B EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xDDEF5A4A EQ PUSH2 0x95 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64 SWAP3 SWAP2 SWAP1 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0x20D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x196 JUMPI PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE8 JUMPI PUSH2 0xE7 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x189 JUMPI PUSH1 0x1 PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x157 JUMPI PUSH2 0x156 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP SWAP3 POP POP PUSH2 0x198 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC9 JUMP JUMPDEST POP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xA DUP2 GT PUSH2 0x205 JUMPI PUSH0 PUSH1 0x1 SWAP1 POP PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x1E2 JUMPI DUP1 DUP3 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1DA SWAP1 PUSH2 0x456 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BA JUMP JUMPDEST POP DUP1 DUP4 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x49D JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x1FD SWAP1 PUSH2 0x456 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 DUP4 SWAP1 POP JUMPDEST DUP4 PUSH1 0x64 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x49D JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2A7 JUMPI DUP1 DUP3 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x49D JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x278 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C5 DUP2 PUSH2 0x2B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F4 DUP3 PUSH2 0x2CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x304 DUP2 PUSH2 0x2EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x31D PUSH0 DUP4 ADD DUP6 PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x32A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x343 DUP2 PUSH2 0x331 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35C PUSH0 DUP4 ADD DUP5 PUSH2 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x331 JUMP JUMPDEST DUP2 EQ PUSH2 0x379 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38A DUP2 PUSH2 0x366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A5 JUMPI PUSH2 0x3A4 PUSH2 0x362 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3B2 DUP5 DUP3 DUP6 ADD PUSH2 0x37C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x41F DUP3 PUSH2 0x331 JUMP JUMPDEST SWAP2 POP PUSH2 0x42A DUP4 PUSH2 0x331 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x438 DUP2 PUSH2 0x331 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x44F JUMPI PUSH2 0x44E PUSH2 0x3E8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x460 DUP3 PUSH2 0x331 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x492 JUMPI PUSH2 0x491 PUSH2 0x3E8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4A7 DUP3 PUSH2 0x331 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B2 DUP4 PUSH2 0x331 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4CA JUMPI PUSH2 0x4C9 PUSH2 0x3E8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x4E9B6C39DBE21FEB0069B3CF1A51AA15EF0AA035139A22038FA9EABE4B736664 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "90:1298:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@asociar_50": {
									"entryPoint": 525,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@comprobarAsociacion_85": {
									"entryPoint": 197,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@sumaFactorial_137": {
									"entryPoint": 412,
									"id": 137,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@suma_36": {
									"entryPoint": 622,
									"id": 36,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3493:1",
										"nodeType": "YulBlock",
										"src": "0:3493:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:1",
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nativeSrc": "59:32:1",
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nativeSrc": "77:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nativeSrc": "70:21:1",
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:1",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:1",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nativeSrc": "162:50:1",
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nativeSrc": "184:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nativeSrc": "172:34:1",
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nativeSrc": "172:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:1",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:1",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nativeSrc": "263:81:1",
													"nodeType": "YulBlock",
													"src": "263:81:1",
													"statements": [
														{
															"nativeSrc": "273:65:1",
															"nodeType": "YulAssignment",
															"src": "273:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "288:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "288:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "295:42:1",
																		"nodeType": "YulLiteral",
																		"src": "295:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "284:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "284:3:1"
																},
																"nativeSrc": "284:54:1",
																"nodeType": "YulFunctionCall",
																"src": "284:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "273:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "273:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "218:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:1",
														"nodeType": "YulTypedName",
														"src": "245:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "255:7:1",
														"nodeType": "YulTypedName",
														"src": "255:7:1",
														"type": ""
													}
												],
												"src": "218:126:1"
											},
											{
												"body": {
													"nativeSrc": "395:51:1",
													"nodeType": "YulBlock",
													"src": "395:51:1",
													"statements": [
														{
															"nativeSrc": "405:35:1",
															"nodeType": "YulAssignment",
															"src": "405:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "434:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "434:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "416:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "416:17:1"
																},
																"nativeSrc": "416:24:1",
																"nodeType": "YulFunctionCall",
																"src": "416:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "405:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "405:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "350:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "377:5:1",
														"nodeType": "YulTypedName",
														"src": "377:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "387:7:1",
														"nodeType": "YulTypedName",
														"src": "387:7:1",
														"type": ""
													}
												],
												"src": "350:96:1"
											},
											{
												"body": {
													"nativeSrc": "517:53:1",
													"nodeType": "YulBlock",
													"src": "517:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "534:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "534:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "557:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "557:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "539:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "539:17:1"
																		},
																		"nativeSrc": "539:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "539:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "527:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:1"
																},
																"nativeSrc": "527:37:1",
																"nodeType": "YulFunctionCall",
																"src": "527:37:1"
															},
															"nativeSrc": "527:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "527:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "452:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "505:5:1",
														"nodeType": "YulTypedName",
														"src": "505:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "512:3:1",
														"nodeType": "YulTypedName",
														"src": "512:3:1",
														"type": ""
													}
												],
												"src": "452:118:1"
											},
											{
												"body": {
													"nativeSrc": "696:200:1",
													"nodeType": "YulBlock",
													"src": "696:200:1",
													"statements": [
														{
															"nativeSrc": "706:26:1",
															"nodeType": "YulAssignment",
															"src": "706:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "718:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "718:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "729:2:1",
																		"nodeType": "YulLiteral",
																		"src": "729:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "714:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "714:3:1"
																},
																"nativeSrc": "714:18:1",
																"nodeType": "YulFunctionCall",
																"src": "714:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "706:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "706:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "793:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "793:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "804:1:1",
																				"nodeType": "YulLiteral",
																				"src": "804:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:1"
																		},
																		"nativeSrc": "789:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "789:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "742:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "742:37:1"
																},
																"nativeSrc": "742:65:1",
																"nodeType": "YulFunctionCall",
																"src": "742:65:1"
															},
															"nativeSrc": "742:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "742:65:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "861:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "861:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "874:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "874:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "885:2:1",
																				"nodeType": "YulLiteral",
																				"src": "885:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "870:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "870:3:1"
																		},
																		"nativeSrc": "870:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "870:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "817:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "817:43:1"
																},
																"nativeSrc": "817:72:1",
																"nodeType": "YulFunctionCall",
																"src": "817:72:1"
															},
															"nativeSrc": "817:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "817:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed",
												"nativeSrc": "576:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:1",
														"nodeType": "YulTypedName",
														"src": "660:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "672:6:1",
														"nodeType": "YulTypedName",
														"src": "672:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "680:6:1",
														"nodeType": "YulTypedName",
														"src": "680:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "691:4:1",
														"nodeType": "YulTypedName",
														"src": "691:4:1",
														"type": ""
													}
												],
												"src": "576:320:1"
											},
											{
												"body": {
													"nativeSrc": "947:32:1",
													"nodeType": "YulBlock",
													"src": "947:32:1",
													"statements": [
														{
															"nativeSrc": "957:16:1",
															"nodeType": "YulAssignment",
															"src": "957:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "968:5:1",
																"nodeType": "YulIdentifier",
																"src": "968:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "957:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "957:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "902:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "929:5:1",
														"nodeType": "YulTypedName",
														"src": "929:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "939:7:1",
														"nodeType": "YulTypedName",
														"src": "939:7:1",
														"type": ""
													}
												],
												"src": "902:77:1"
											},
											{
												"body": {
													"nativeSrc": "1050:53:1",
													"nodeType": "YulBlock",
													"src": "1050:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1067:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1067:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1090:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1090:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1072:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1072:17:1"
																		},
																		"nativeSrc": "1072:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:1"
																},
																"nativeSrc": "1060:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1060:37:1"
															},
															"nativeSrc": "1060:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1060:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "985:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1038:5:1",
														"nodeType": "YulTypedName",
														"src": "1038:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1045:3:1",
														"nodeType": "YulTypedName",
														"src": "1045:3:1",
														"type": ""
													}
												],
												"src": "985:118:1"
											},
											{
												"body": {
													"nativeSrc": "1207:124:1",
													"nodeType": "YulBlock",
													"src": "1207:124:1",
													"statements": [
														{
															"nativeSrc": "1217:26:1",
															"nodeType": "YulAssignment",
															"src": "1217:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1229:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1229:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1240:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1240:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1225:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:1"
																},
																"nativeSrc": "1225:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1225:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1217:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1217:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1297:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1297:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1321:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1321:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1306:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1306:3:1"
																		},
																		"nativeSrc": "1306:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1306:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1253:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1253:43:1"
																},
																"nativeSrc": "1253:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1253:71:1"
															},
															"nativeSrc": "1253:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1253:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1109:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1179:9:1",
														"nodeType": "YulTypedName",
														"src": "1179:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1191:6:1",
														"nodeType": "YulTypedName",
														"src": "1191:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1202:4:1",
														"nodeType": "YulTypedName",
														"src": "1202:4:1",
														"type": ""
													}
												],
												"src": "1109:222:1"
											},
											{
												"body": {
													"nativeSrc": "1377:35:1",
													"nodeType": "YulBlock",
													"src": "1377:35:1",
													"statements": [
														{
															"nativeSrc": "1387:19:1",
															"nodeType": "YulAssignment",
															"src": "1387:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1403:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1403:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1397:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1397:5:1"
																},
																"nativeSrc": "1397:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1397:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1387:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1337:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1370:6:1",
														"nodeType": "YulTypedName",
														"src": "1370:6:1",
														"type": ""
													}
												],
												"src": "1337:75:1"
											},
											{
												"body": {
													"nativeSrc": "1507:28:1",
													"nodeType": "YulBlock",
													"src": "1507:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1524:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1524:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1527:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1527:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1517:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:1"
																},
																"nativeSrc": "1517:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1517:12:1"
															},
															"nativeSrc": "1517:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1517:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1418:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1418:117:1"
											},
											{
												"body": {
													"nativeSrc": "1630:28:1",
													"nodeType": "YulBlock",
													"src": "1630:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1647:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1647:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1650:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1650:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1640:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1640:6:1"
																},
																"nativeSrc": "1640:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1640:12:1"
															},
															"nativeSrc": "1640:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1640:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1541:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1541:117:1"
											},
											{
												"body": {
													"nativeSrc": "1707:79:1",
													"nodeType": "YulBlock",
													"src": "1707:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1764:16:1",
																"nodeType": "YulBlock",
																"src": "1764:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1773:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1773:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1776:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1776:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1766:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1766:6:1"
																			},
																			"nativeSrc": "1766:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1766:12:1"
																		},
																		"nativeSrc": "1766:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1766:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1730:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1730:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1755:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1755:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1737:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1737:17:1"
																				},
																				"nativeSrc": "1737:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1737:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1727:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1727:2:1"
																		},
																		"nativeSrc": "1727:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1727:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1720:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1720:6:1"
																},
																"nativeSrc": "1720:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1720:43:1"
															},
															"nativeSrc": "1717:63:1",
															"nodeType": "YulIf",
															"src": "1717:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1664:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1700:5:1",
														"nodeType": "YulTypedName",
														"src": "1700:5:1",
														"type": ""
													}
												],
												"src": "1664:122:1"
											},
											{
												"body": {
													"nativeSrc": "1844:87:1",
													"nodeType": "YulBlock",
													"src": "1844:87:1",
													"statements": [
														{
															"nativeSrc": "1854:29:1",
															"nodeType": "YulAssignment",
															"src": "1854:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1876:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1876:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1863:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1863:12:1"
																},
																"nativeSrc": "1863:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1863:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1854:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1854:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1919:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1919:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1892:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1892:26:1"
																},
																"nativeSrc": "1892:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1892:33:1"
															},
															"nativeSrc": "1892:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1892:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1792:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1822:6:1",
														"nodeType": "YulTypedName",
														"src": "1822:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1830:3:1",
														"nodeType": "YulTypedName",
														"src": "1830:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1838:5:1",
														"nodeType": "YulTypedName",
														"src": "1838:5:1",
														"type": ""
													}
												],
												"src": "1792:139:1"
											},
											{
												"body": {
													"nativeSrc": "2003:263:1",
													"nodeType": "YulBlock",
													"src": "2003:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2049:83:1",
																"nodeType": "YulBlock",
																"src": "2049:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2051:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2051:77:1"
																			},
																			"nativeSrc": "2051:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2051:79:1"
																		},
																		"nativeSrc": "2051:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2051:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2024:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2024:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2033:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2033:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2020:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2020:3:1"
																		},
																		"nativeSrc": "2020:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2020:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2045:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2045:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2016:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2016:3:1"
																},
																"nativeSrc": "2016:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2016:32:1"
															},
															"nativeSrc": "2013:119:1",
															"nodeType": "YulIf",
															"src": "2013:119:1"
														},
														{
															"nativeSrc": "2142:117:1",
															"nodeType": "YulBlock",
															"src": "2142:117:1",
															"statements": [
																{
																	"nativeSrc": "2157:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2157:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2171:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2171:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2161:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2161:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2186:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2186:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2221:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2221:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2232:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2232:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2217:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2217:3:1"
																				},
																				"nativeSrc": "2217:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2217:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2241:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2241:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2196:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2196:20:1"
																		},
																		"nativeSrc": "2196:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2196:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2186:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2186:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1937:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1973:9:1",
														"nodeType": "YulTypedName",
														"src": "1973:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1984:7:1",
														"nodeType": "YulTypedName",
														"src": "1984:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1996:6:1",
														"nodeType": "YulTypedName",
														"src": "1996:6:1",
														"type": ""
													}
												],
												"src": "1937:329:1"
											},
											{
												"body": {
													"nativeSrc": "2300:152:1",
													"nodeType": "YulBlock",
													"src": "2300:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2320:77:1",
																		"nodeType": "YulLiteral",
																		"src": "2320:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2310:6:1"
																},
																"nativeSrc": "2310:88:1",
																"nodeType": "YulFunctionCall",
																"src": "2310:88:1"
															},
															"nativeSrc": "2310:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "2310:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2414:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2414:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2417:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2417:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2407:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2407:6:1"
																},
																"nativeSrc": "2407:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2407:15:1"
															},
															"nativeSrc": "2407:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2407:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2438:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2438:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2441:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2441:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2431:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2431:6:1"
																},
																"nativeSrc": "2431:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2431:15:1"
															},
															"nativeSrc": "2431:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2431:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "2272:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2272:180:1"
											},
											{
												"body": {
													"nativeSrc": "2486:152:1",
													"nodeType": "YulBlock",
													"src": "2486:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2503:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2503:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2506:77:1",
																		"nodeType": "YulLiteral",
																		"src": "2506:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2496:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:1"
																},
																"nativeSrc": "2496:88:1",
																"nodeType": "YulFunctionCall",
																"src": "2496:88:1"
															},
															"nativeSrc": "2496:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "2496:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2600:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2600:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2603:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2603:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2593:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2593:6:1"
																},
																"nativeSrc": "2593:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2593:15:1"
															},
															"nativeSrc": "2593:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2593:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2624:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2624:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2627:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2627:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2617:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2617:6:1"
																},
																"nativeSrc": "2617:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2617:15:1"
															},
															"nativeSrc": "2617:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2617:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2458:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2458:180:1"
											},
											{
												"body": {
													"nativeSrc": "2692:362:1",
													"nodeType": "YulBlock",
													"src": "2692:362:1",
													"statements": [
														{
															"nativeSrc": "2702:25:1",
															"nodeType": "YulAssignment",
															"src": "2702:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2725:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2725:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2707:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2707:17:1"
																},
																"nativeSrc": "2707:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2707:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2702:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2702:1:1"
																}
															]
														},
														{
															"nativeSrc": "2736:25:1",
															"nodeType": "YulAssignment",
															"src": "2736:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2759:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2759:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2741:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2741:17:1"
																},
																"nativeSrc": "2741:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2741:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2736:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2736:1:1"
																}
															]
														},
														{
															"nativeSrc": "2770:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2770:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2793:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2793:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2796:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2796:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2789:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2789:3:1"
																},
																"nativeSrc": "2789:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2789:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "2774:11:1",
																	"nodeType": "YulTypedName",
																	"src": "2774:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2807:41:1",
															"nodeType": "YulAssignment",
															"src": "2807:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "2836:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "2836:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2818:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2818:17:1"
																},
																"nativeSrc": "2818:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2818:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2807:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2807:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3025:22:1",
																"nodeType": "YulBlock",
																"src": "3025:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3027:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3027:16:1"
																			},
																			"nativeSrc": "3027:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3027:18:1"
																		},
																		"nativeSrc": "3027:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3027:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2958:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "2958:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2951:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2951:6:1"
																				},
																				"nativeSrc": "2951:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2951:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2981:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "2981:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2988:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "2988:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2997:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "2997:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2984:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2984:3:1"
																						},
																						"nativeSrc": "2984:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2984:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2978:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "2978:2:1"
																				},
																				"nativeSrc": "2978:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2978:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2931:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2931:2:1"
																		},
																		"nativeSrc": "2931:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2931:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2911:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2911:6:1"
																},
																"nativeSrc": "2911:113:1",
																"nodeType": "YulFunctionCall",
																"src": "2911:113:1"
															},
															"nativeSrc": "2908:139:1",
															"nodeType": "YulIf",
															"src": "2908:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2644:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2675:1:1",
														"nodeType": "YulTypedName",
														"src": "2675:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2678:1:1",
														"nodeType": "YulTypedName",
														"src": "2678:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2684:7:1",
														"nodeType": "YulTypedName",
														"src": "2684:7:1",
														"type": ""
													}
												],
												"src": "2644:410:1"
											},
											{
												"body": {
													"nativeSrc": "3103:190:1",
													"nodeType": "YulBlock",
													"src": "3103:190:1",
													"statements": [
														{
															"nativeSrc": "3113:33:1",
															"nodeType": "YulAssignment",
															"src": "3113:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3140:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3140:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3122:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3122:17:1"
																},
																"nativeSrc": "3122:24:1",
																"nodeType": "YulFunctionCall",
																"src": "3122:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3113:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3113:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3236:22:1",
																"nodeType": "YulBlock",
																"src": "3236:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3238:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3238:16:1"
																			},
																			"nativeSrc": "3238:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3238:18:1"
																		},
																		"nativeSrc": "3238:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3238:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3161:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3161:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3168:66:1",
																		"nodeType": "YulLiteral",
																		"src": "3168:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3158:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3158:2:1"
																},
																"nativeSrc": "3158:77:1",
																"nodeType": "YulFunctionCall",
																"src": "3158:77:1"
															},
															"nativeSrc": "3155:103:1",
															"nodeType": "YulIf",
															"src": "3155:103:1"
														},
														{
															"nativeSrc": "3267:20:1",
															"nodeType": "YulAssignment",
															"src": "3267:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3278:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3278:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3285:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3274:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3274:3:1"
																},
																"nativeSrc": "3274:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3274:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3267:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3267:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "3060:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3089:5:1",
														"nodeType": "YulTypedName",
														"src": "3089:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3099:3:1",
														"nodeType": "YulTypedName",
														"src": "3099:3:1",
														"type": ""
													}
												],
												"src": "3060:233:1"
											},
											{
												"body": {
													"nativeSrc": "3343:147:1",
													"nodeType": "YulBlock",
													"src": "3343:147:1",
													"statements": [
														{
															"nativeSrc": "3353:25:1",
															"nodeType": "YulAssignment",
															"src": "3353:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3376:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3376:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3358:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3358:17:1"
																},
																"nativeSrc": "3358:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3358:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3353:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3353:1:1"
																}
															]
														},
														{
															"nativeSrc": "3387:25:1",
															"nodeType": "YulAssignment",
															"src": "3387:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3410:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3410:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3392:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3392:17:1"
																},
																"nativeSrc": "3392:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3392:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3387:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3387:1:1"
																}
															]
														},
														{
															"nativeSrc": "3421:16:1",
															"nodeType": "YulAssignment",
															"src": "3421:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3432:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3432:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3435:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3435:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3428:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3428:3:1"
																},
																"nativeSrc": "3428:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3428:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3421:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3421:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3461:22:1",
																"nodeType": "YulBlock",
																"src": "3461:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3463:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3463:16:1"
																			},
																			"nativeSrc": "3463:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3463:18:1"
																		},
																		"nativeSrc": "3463:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3463:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3453:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3453:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3456:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3456:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3450:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3450:2:1"
																},
																"nativeSrc": "3450:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3450:10:1"
															},
															"nativeSrc": "3447:36:1",
															"nodeType": "YulIf",
															"src": "3447:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3299:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3330:1:1",
														"nodeType": "YulTypedName",
														"src": "3330:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3333:1:1",
														"nodeType": "YulTypedName",
														"src": "3333:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3339:3:1",
														"nodeType": "YulTypedName",
														"src": "3339:3:1",
														"type": ""
													}
												],
												"src": "3299:191:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c806341806a131461004e57806396f6611d1461006d578063a98ce68b1461008b578063ddef5a4a14610095575b5f80fd5b6100566100c5565b60405161006492919061030a565b60405180910390f35b61007561019c565b6040516100829190610349565b60405180910390f35b61009361020d565b005b6100af60048036038101906100aa9190610390565b61026e565b6040516100bc9190610349565b60405180910390f35b5f805f5b5f80549050811015610196575f81815481106100e8576100e76103bb565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036101895760015f8281548110610157576101566103bb565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250925050610198565b80806001019150506100c9565b505b9091565b5f805f90505f600190505b600a8111610205575f600190505f600290505b8281116101e25780826101cd9190610415565b915080806101da90610456565b9150506101ba565b5080836101ef919061049d565b92505080806101fd90610456565b9150506101a7565b508091505090565b5f33908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f90505f8390505b836064610285919061049d565b8110156102a7578082610298919061049d565b91508080600101915050610278565b5080915050919050565b5f8115159050919050565b6102c5816102b1565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102f4826102cb565b9050919050565b610304816102ea565b82525050565b5f60408201905061031d5f8301856102bc565b61032a60208301846102fb565b9392505050565b5f819050919050565b61034381610331565b82525050565b5f60208201905061035c5f83018461033a565b92915050565b5f80fd5b61036f81610331565b8114610379575f80fd5b50565b5f8135905061038a81610366565b92915050565b5f602082840312156103a5576103a4610362565b5b5f6103b28482850161037c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61041f82610331565b915061042a83610331565b925082820261043881610331565b9150828204841483151761044f5761044e6103e8565b5b5092915050565b5f61046082610331565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610492576104916103e8565b5b600182019050919050565b5f6104a782610331565b91506104b283610331565b92508282019050808211156104ca576104c96103e8565b5b9291505056fea26469706673582212207f4e9b6c39dbe21feb0069b3cf1a51aa15ef0aa035139a22038fa9eabe4b736664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41806A13 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x96F6611D EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xA98CE68B EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xDDEF5A4A EQ PUSH2 0x95 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64 SWAP3 SWAP2 SWAP1 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0x20D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x196 JUMPI PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE8 JUMPI PUSH2 0xE7 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x189 JUMPI PUSH1 0x1 PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x157 JUMPI PUSH2 0x156 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP SWAP3 POP POP PUSH2 0x198 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC9 JUMP JUMPDEST POP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xA DUP2 GT PUSH2 0x205 JUMPI PUSH0 PUSH1 0x1 SWAP1 POP PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x1E2 JUMPI DUP1 DUP3 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1DA SWAP1 PUSH2 0x456 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BA JUMP JUMPDEST POP DUP1 DUP4 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x49D JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x1FD SWAP1 PUSH2 0x456 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 DUP4 SWAP1 POP JUMPDEST DUP4 PUSH1 0x64 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x49D JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2A7 JUMPI DUP1 DUP3 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x49D JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x278 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C5 DUP2 PUSH2 0x2B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F4 DUP3 PUSH2 0x2CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x304 DUP2 PUSH2 0x2EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x31D PUSH0 DUP4 ADD DUP6 PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x32A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x343 DUP2 PUSH2 0x331 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35C PUSH0 DUP4 ADD DUP5 PUSH2 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x331 JUMP JUMPDEST DUP2 EQ PUSH2 0x379 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38A DUP2 PUSH2 0x366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A5 JUMPI PUSH2 0x3A4 PUSH2 0x362 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3B2 DUP5 DUP3 DUP6 ADD PUSH2 0x37C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x41F DUP3 PUSH2 0x331 JUMP JUMPDEST SWAP2 POP PUSH2 0x42A DUP4 PUSH2 0x331 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x438 DUP2 PUSH2 0x331 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x44F JUMPI PUSH2 0x44E PUSH2 0x3E8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x460 DUP3 PUSH2 0x331 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x492 JUMPI PUSH2 0x491 PUSH2 0x3E8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4A7 DUP3 PUSH2 0x331 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B2 DUP4 PUSH2 0x331 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4CA JUMPI PUSH2 0x4C9 PUSH2 0x3E8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x4E9B6C39DBE21FEB0069B3CF1A51AA15EF0AA035139A22038FA9EABE4B736664 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "90:1298:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:247;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1031:355;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;542:70;;;:::i;:::-;;195:221;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;686:247;737:4;743:7;774:6;770:157;787:11;:18;;;;784:1;:21;770:157;;;840:11;852:1;840:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;828:26;;:10;:26;;;825:92;;881:4;887:11;899:1;887:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;873:29;;;;;;;825:92;807:3;;;;;;;770:157;;;;686:247;;;:::o;1031:355::-;1076:4;1100:9;1110:1;1100:11;;1125:6;1133:1;1125:9;;1121:238;1139:2;1136:1;:5;1121:238;;1174:14;1191:1;1174:18;;1223:6;1230:1;1223:8;;1219:80;1236:1;1233;:4;1219:80;;1283:1;1273:9;:11;;;;:::i;:::-;1261:23;;1239:3;;;;;:::i;:::-;;;;1219:80;;;;1339:9;1332:4;:16;;;;:::i;:::-;1325:23;;1147:212;1143:3;;;;;:::i;:::-;;;;1121:238;;;;1375:4;1368:11;;;1031:355;:::o;542:70::-;577:11;594:10;577:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;542:70::o;195:221::-;243:4;267:9;279:1;267:13;;303:6;311:7;303:15;;299:81;327:7;323:3;:11;;;;:::i;:::-;320:1;:15;299:81;;;368:1;362:4;:7;;;;:::i;:::-;355:14;;337:3;;;;;;;299:81;;;;405:4;398:11;;;195:221;;;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:126::-;255:7;295:42;288:5;284:54;273:65;;218:126;;;:::o;350:96::-;387:7;416:24;434:5;416:24;:::i;:::-;405:35;;350:96;;;:::o;452:118::-;539:24;557:5;539:24;:::i;:::-;534:3;527:37;452:118;;:::o;576:320::-;691:4;729:2;718:9;714:18;706:26;;742:65;804:1;793:9;789:17;780:6;742:65;:::i;:::-;817:72;885:2;874:9;870:18;861:6;817:72;:::i;:::-;576:320;;;;;:::o;902:77::-;939:7;968:5;957:16;;902:77;;;:::o;985:118::-;1072:24;1090:5;1072:24;:::i;:::-;1067:3;1060:37;985:118;;:::o;1109:222::-;1202:4;1240:2;1229:9;1225:18;1217:26;;1253:71;1321:1;1310:9;1306:17;1297:6;1253:71;:::i;:::-;1109:222;;;;:::o;1418:117::-;1527:1;1524;1517:12;1664:122;1737:24;1755:5;1737:24;:::i;:::-;1730:5;1727:35;1717:63;;1776:1;1773;1766:12;1717:63;1664:122;:::o;1792:139::-;1838:5;1876:6;1863:20;1854:29;;1892:33;1919:5;1892:33;:::i;:::-;1792:139;;;;:::o;1937:329::-;1996:6;2045:2;2033:9;2024:7;2020:23;2016:32;2013:119;;;2051:79;;:::i;:::-;2013:119;2171:1;2196:53;2241:7;2232:6;2221:9;2217:22;2196:53;:::i;:::-;2186:63;;2142:117;1937:329;;;;:::o;2272:180::-;2320:77;2317:1;2310:88;2417:4;2414:1;2407:15;2441:4;2438:1;2431:15;2458:180;2506:77;2503:1;2496:88;2603:4;2600:1;2593:15;2627:4;2624:1;2617:15;2644:410;2684:7;2707:20;2725:1;2707:20;:::i;:::-;2702:25;;2741:20;2759:1;2741:20;:::i;:::-;2736:25;;2796:1;2793;2789:9;2818:30;2836:11;2818:30;:::i;:::-;2807:41;;2997:1;2988:7;2984:15;2981:1;2978:22;2958:1;2951:9;2931:83;2908:139;;3027:18;;:::i;:::-;2908:139;2692:362;2644:410;;;;:::o;3060:233::-;3099:3;3122:24;3140:5;3122:24;:::i;:::-;3113:33;;3168:66;3161:5;3158:77;3155:103;;3238:18;;:::i;:::-;3155:103;3285:1;3278:5;3274:13;3267:20;;3060:233;;;:::o;3299:191::-;3339:3;3358:20;3376:1;3358:20;:::i;:::-;3353:25;;3392:20;3410:1;3392:20;:::i;:::-;3387:25;;3435:1;3432;3428:9;3421:16;;3456:3;3453:1;3450:10;3447:36;;;3463:18;;:::i;:::-;3447:36;3299:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "257200",
								"executionCost": "298",
								"totalCost": "257498"
							},
							"external": {
								"asociar()": "48739",
								"comprobarAsociacion()": "infinite",
								"suma(uint256)": "infinite",
								"sumaFactorial()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 90,
									"end": 1388,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 1388,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207f4e9b6c39dbe21feb0069b3cf1a51aa15ef0aa035139a22038fa9eabe4b736664736f6c634300081a0033",
									".code": [
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "41806A13"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "96F6611D"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "A98CE68B"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "DDEF5A4A"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 1388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 686,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 686,
											"end": 933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 686,
											"end": 933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 686,
											"end": 933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 686,
											"end": 933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 686,
											"end": 933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1031,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1031,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 542,
											"end": 612,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 542,
											"end": 612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 542,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 542,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 542,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 542,
											"end": 612,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 542,
											"end": 612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 542,
											"end": 612,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 195,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 195,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 195,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 195,
											"end": 416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 195,
											"end": 416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 195,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 195,
											"end": 416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 195,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 195,
											"end": 416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 195,
											"end": 416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 195,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 686,
											"end": 933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 737,
											"end": 741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 774,
											"end": 780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 927,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 770,
											"end": 927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 787,
											"end": 805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 784,
											"end": 785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 784,
											"end": 805,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 770,
											"end": 927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 770,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 770,
											"end": 927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 840,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 840,
											"end": 854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 840,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 840,
											"end": 854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 840,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 840,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 854,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 840,
											"end": 854,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 828,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 828,
											"end": 854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 828,
											"end": 838,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 828,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 828,
											"end": 854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 828,
											"end": 854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 825,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 825,
											"end": 917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 881,
											"end": 885,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 887,
											"end": 898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 887,
											"end": 901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 887,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 887,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 887,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 887,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 887,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 901,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 887,
											"end": 901,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 887,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 887,
											"end": 901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 873,
											"end": 902,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 873,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 902,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 873,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 873,
											"end": 902,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 825,
											"end": 917,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 825,
											"end": 917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 807,
											"end": 810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 807,
											"end": 810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 807,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 807,
											"end": 810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 807,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 807,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 770,
											"end": 927,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 927,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 770,
											"end": 927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 686,
											"end": 933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 686,
											"end": 933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1121,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1141,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1121,
											"end": 1359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1223,
											"end": 1231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1299,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1219,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1237,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1219,
											"end": 1299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1273,
											"end": 1284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1273,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1284,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1273,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1239,
											"end": 1242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1239,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1242,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1239,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1219,
											"end": 1299,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1299,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1219,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1332,
											"end": 1348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1332,
											"end": 1348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1348,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1332,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1348,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1147,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1143,
											"end": 1146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1121,
											"end": 1359,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1121,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 542,
											"end": 612,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 542,
											"end": 612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 604,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 577,
											"end": 605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 577,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 605,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 577,
											"end": 605,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 605,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 577,
											"end": 605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 542,
											"end": 612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 195,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 243,
											"end": 247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 303,
											"end": 318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 299,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 299,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 334,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 323,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 323,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 323,
											"end": 334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 323,
											"end": 334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 323,
											"end": 334,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 323,
											"end": 334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 320,
											"end": 335,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 299,
											"end": 380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 299,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 299,
											"end": 380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 368,
											"end": 369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 362,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 362,
											"end": 369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 362,
											"end": 369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 362,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 369,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 362,
											"end": 369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 337,
											"end": 340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 337,
											"end": 340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 299,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 299,
											"end": 380,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 299,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 299,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 299,
											"end": 380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 398,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 398,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 344,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 218,
											"end": 344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 255,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 288,
											"end": 293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 284,
											"end": 338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 273,
											"end": 338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 273,
											"end": 338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 218,
											"end": 344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 350,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 350,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 387,
											"end": 394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 434,
											"end": 439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 416,
											"end": 440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 405,
											"end": 440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 350,
											"end": 446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 350,
											"end": 446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 350,
											"end": 446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 350,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 452,
											"end": 570,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 452,
											"end": 570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 539,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 539,
											"end": 563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 563,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 539,
											"end": 563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 534,
											"end": 537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 527,
											"end": 564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 452,
											"end": 570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 452,
											"end": 570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 452,
											"end": 570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 576,
											"end": 896,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 576,
											"end": 896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 714,
											"end": 732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 706,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 706,
											"end": 732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 742,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 804,
											"end": 805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 789,
											"end": 806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 742,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 742,
											"end": 807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 742,
											"end": 807,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 742,
											"end": 807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 817,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 885,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 870,
											"end": 888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 861,
											"end": 867,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 817,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 817,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 817,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 817,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 576,
											"end": 896,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 576,
											"end": 896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 576,
											"end": 896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 576,
											"end": 896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 576,
											"end": 896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 576,
											"end": 896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 902,
											"end": 979,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 902,
											"end": 979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 957,
											"end": 973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 957,
											"end": 973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 902,
											"end": 979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 902,
											"end": 979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 902,
											"end": 979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 902,
											"end": 979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1103,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 985,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1090,
											"end": 1095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1072,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1096,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1072,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1331,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1109,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1321,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1303,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1253,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1331,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1535,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1418,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1786,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1664,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1737,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1737,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1762,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1717,
											"end": 1780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1773,
											"end": 1774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1778,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1780,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1717,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1931,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1792,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1883,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1919,
											"end": 1924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1892,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1892,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 2266,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1937,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2033,
											"end": 2042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2043,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2048,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2132,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2013,
											"end": 2132,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2051,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2051,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2130,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2051,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2132,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2013,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2241,
											"end": 2248,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2230,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2217,
											"end": 2239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2196,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2196,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 2266,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 2266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 2266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 2266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 2266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2452,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2272,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2397,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2421,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2414,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2407,
											"end": 2422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2438,
											"end": 2439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2446,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2638,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2458,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2583,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2503,
											"end": 2504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2607,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2600,
											"end": 2601,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2593,
											"end": 2608,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2631,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2624,
											"end": 2625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3054,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2644,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2725,
											"end": 2726,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2707,
											"end": 2727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2727,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2707,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 2727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 2727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2759,
											"end": 2760,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2741,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2761,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2836,
											"end": 2847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2818,
											"end": 2848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 2998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 2999,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2982,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 2959,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2960,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2931,
											"end": 3014,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2908,
											"end": 3047,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3027,
											"end": 3045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 3047,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2908,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 3054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3054,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3293,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3060,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3140,
											"end": 3145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3122,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3146,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3122,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3235,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3155,
											"end": 3258,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3238,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3258,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3155,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3278,
											"end": 3283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3490,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3299,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3376,
											"end": 3377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3358,
											"end": 3378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3378,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3358,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3353,
											"end": 3378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3353,
											"end": 3378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3410,
											"end": 3411,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3392,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3412,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3392,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3412,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3436,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3454,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3460,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3447,
											"end": 3483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3463,
											"end": 3481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3483,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3447,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3490,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"BLOQUE 1 - Conceptos básicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"asociar()": "a98ce68b",
							"comprobarAsociacion()": "41806a13",
							"suma(uint256)": "ddef5a4a",
							"sumaFactorial()": "96f6611d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"asociar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comprobarAsociacion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numero\",\"type\":\"uint256\"}],\"name\":\"suma\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sumaFactorial\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BLOQUE 1 - Conceptos b\\u00e1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":\"bucle_for\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BLOQUE 1 - Conceptos b\\u00e1sicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol\":{\"keccak256\":\"0x6127d8471c1afda329bdbb2d989c5fa714565fc511e73bbbe069eec204069d72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e132930694cf8f1ddc12f0d4ae300abcd03d9ca5bfb7f36ed761c1f4dd262be\",\"dweb:/ipfs/QmeSU4oHSMmuarP1AwDXmbUiHvmtXZrTTGEvzkVEzTu5RP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 39,
								"contract": "BLOQUE 1 - Conceptos básicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol:bucle_for",
								"label": "direcciones",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> BLOQUE 1 - Conceptos básicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol:43:9:\n   |\n43 |         uint suma=0;\n   |         ^^^^^^^^^\nNote: The shadowed declaration is here:\n --> BLOQUE 1 - Conceptos básicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol:9:5:\n  |\n9 |     function suma(uint _numero) public pure returns(uint){\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 416,
						"file": "BLOQUE 1 - Conceptos básicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol",
						"message": "The shadowed declaration is here:",
						"start": 195
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1109,
					"file": "BLOQUE 1 - Conceptos básicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol",
					"start": 1100
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> BLOQUE 1 - Conceptos básicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol:29:56:\n   |\n29 |     function comprobarAsociacion() public view returns(bool, address){\n   |                                                        ^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 741,
					"file": "BLOQUE 1 - Conceptos básicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol",
					"start": 737
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> BLOQUE 1 - Conceptos básicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol:29:62:\n   |\n29 |     function comprobarAsociacion() public view returns(bool, address){\n   |                                                              ^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 750,
					"file": "BLOQUE 1 - Conceptos básicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol",
					"start": 743
				},
				"type": "Warning"
			}
		],
		"sources": {
			"BLOQUE 1 - Conceptos básicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol": {
				"ast": {
					"absolutePath": "BLOQUE 1 - Conceptos básicos de Solidity/Tema 6 - Bucles y condicionales/bucle_for.sol",
					"exportedSymbols": {
						"bucle_for": [
							138
						]
					},
					"id": 139,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "57:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "bucle_for",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 138,
							"linearizedBaseContracts": [
								138
							],
							"name": "bucle_for",
							"nameLocation": "99:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "248:168:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "Suma",
														"nameLocation": "272:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 35,
														"src": "267:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 8,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "267:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"initialValue": {
													"hexValue": "30",
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "279:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "267:13:0"
											},
											{
												"body": {
													"id": 31,
													"nodeType": "Block",
													"src": "341:39:0",
													"statements": [
														{
															"expression": {
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 25,
																	"name": "Suma",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "355:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 26,
																		"name": "Suma",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "362:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 27,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "368:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "362:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "355:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 30,
															"nodeType": "ExpressionStatement",
															"src": "355:14:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 16,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "320:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313030",
																	"id": 17,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "323:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 18,
																	"name": "_numero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "327:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "323:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 20,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "322:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "320:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 32,
												"initializationExpression": {
													"assignments": [
														13
													],
													"declarations": [
														{
															"constant": false,
															"id": 13,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "308:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 32,
															"src": "303:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 12,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "303:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 15,
													"initialValue": {
														"id": 14,
														"name": "_numero",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "303:15:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "337:3:0",
														"subExpression": {
															"id": 22,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "337:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 24,
													"nodeType": "ExpressionStatement",
													"src": "337:3:0"
												},
												"nodeType": "ForStatement",
												"src": "299:81:0"
											},
											{
												"expression": {
													"id": 33,
													"name": "Suma",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "405:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 7,
												"id": 34,
												"nodeType": "Return",
												"src": "398:11:0"
											}
										]
									},
									"functionSelector": "ddef5a4a",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "suma",
									"nameLocation": "204:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_numero",
												"nameLocation": "214:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "209:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "209:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "208:14:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "243:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "243:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:6:0"
									},
									"scope": 138,
									"src": "195:221:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "direcciones",
									"nameLocation": "484:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "473:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 37,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "473:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 38,
										"nodeType": "ArrayTypeName",
										"src": "473:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "567:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 45,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "594:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "598:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "594:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 42,
															"name": "direcciones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "577:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "589:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "577:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "577:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "577:28:0"
											}
										]
									},
									"functionSelector": "a98ce68b",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asociar",
									"nameLocation": "551:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "558:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:0:0"
									},
									"scope": 138,
									"src": "542:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "751:182:0",
										"statements": [
											{
												"body": {
													"id": 82,
													"nodeType": "Block",
													"src": "811:116:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 68,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "828:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "832:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "828:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"baseExpression": {
																		"id": 70,
																		"name": "direcciones",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "840:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 72,
																	"indexExpression": {
																		"id": 71,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "852:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "840:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "828:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 81,
															"nodeType": "IfStatement",
															"src": "825:92:0",
															"trueBody": {
																"id": 80,
																"nodeType": "Block",
																"src": "855:62:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "74727565",
																					"id": 74,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "881:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				{
																					"baseExpression": {
																						"id": 75,
																						"name": "direcciones",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 39,
																						"src": "887:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 77,
																					"indexExpression": {
																						"id": 76,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 58,
																						"src": "899:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "887:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"id": 78,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "880:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_address_$",
																				"typeString": "tuple(bool,address)"
																			}
																		},
																		"functionReturnParameters": 56,
																		"id": 79,
																		"nodeType": "Return",
																		"src": "873:29:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "784:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 62,
															"name": "direcciones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "787:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "799:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "787:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "784:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 83,
												"initializationExpression": {
													"assignments": [
														58
													],
													"declarations": [
														{
															"constant": false,
															"id": 58,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "779:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 83,
															"src": "774:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 57,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "774:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 60,
													"initialValue": {
														"hexValue": "30",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "781:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "774:8:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "807:3:0",
														"subExpression": {
															"id": 65,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "807:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 67,
													"nodeType": "ExpressionStatement",
													"src": "807:3:0"
												},
												"nodeType": "ForStatement",
												"src": "770:157:0"
											}
										]
									},
									"functionSelector": "41806a13",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "comprobarAsociacion",
									"nameLocation": "695:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "714:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "737:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "743:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:15:0"
									},
									"scope": 138,
									"src": "686:247:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "1081:305:0",
										"statements": [
											{
												"assignments": [
													91
												],
												"declarations": [
													{
														"constant": false,
														"id": 91,
														"mutability": "mutable",
														"name": "suma",
														"nameLocation": "1105:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 136,
														"src": "1100:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 90,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1100:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 93,
												"initialValue": {
													"hexValue": "30",
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1110:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1100:11:0"
											},
											{
												"body": {
													"id": 132,
													"nodeType": "Block",
													"src": "1147:212:0",
													"statements": [
														{
															"assignments": [
																105
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 105,
																	"mutability": "mutable",
																	"name": "factorial",
																	"nameLocation": "1179:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 132,
																	"src": "1174:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 104,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1174:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 107,
															"initialValue": {
																"hexValue": "31",
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1191:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1174:18:0"
														},
														{
															"body": {
																"id": 124,
																"nodeType": "Block",
																"src": "1243:56:0",
																"statements": [
																	{
																		"expression": {
																			"id": 122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 118,
																				"name": "factorial",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 105,
																				"src": "1261:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 119,
																					"name": "factorial",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 105,
																					"src": "1273:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 120,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 109,
																					"src": "1283:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1273:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1261:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 123,
																		"nodeType": "ExpressionStatement",
																		"src": "1261:23:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 112,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "1233:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 113,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "1236:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1233:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 125,
															"initializationExpression": {
																"assignments": [
																	109
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 109,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "1228:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 125,
																		"src": "1223:6:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 108,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "1223:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 111,
																"initialValue": {
																	"hexValue": "32",
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1230:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1223:8:0"
															},
															"isSimpleCounterLoop": false,
															"loopExpression": {
																"expression": {
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "1239:3:0",
																	"subExpression": {
																		"id": 115,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "1239:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 117,
																"nodeType": "ExpressionStatement",
																"src": "1239:3:0"
															},
															"nodeType": "ForStatement",
															"src": "1219:80:0"
														},
														{
															"expression": {
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 126,
																	"name": "suma",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "1325:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 127,
																		"name": "suma",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "1332:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 128,
																		"name": "factorial",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "1339:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1332:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1325:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 131,
															"nodeType": "ExpressionStatement",
															"src": "1325:23:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 98,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1136:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "3130",
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1139:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 133,
												"initializationExpression": {
													"assignments": [
														95
													],
													"declarations": [
														{
															"constant": false,
															"id": 95,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1130:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 133,
															"src": "1125:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 94,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1125:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 97,
													"initialValue": {
														"hexValue": "31",
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1133:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1125:9:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1143:3:0",
														"subExpression": {
															"id": 101,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1143:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 103,
													"nodeType": "ExpressionStatement",
													"src": "1143:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1121:238:0"
											},
											{
												"expression": {
													"id": 134,
													"name": "suma",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "1375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 89,
												"id": 135,
												"nodeType": "Return",
												"src": "1368:11:0"
											}
										]
									},
									"functionSelector": "96f6611d",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sumaFactorial",
									"nameLocation": "1040:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1053:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1076:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1076:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1075:6:0"
									},
									"scope": 138,
									"src": "1031:355:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 139,
							"src": "90:1298:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "57:1334:0"
				},
				"id": 0
			}
		}
	}
}